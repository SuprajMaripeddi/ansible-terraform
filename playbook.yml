---

- hosts: localhost
  connection: local
  gather_facts: no

  vars:

  # pre_tasks:
  #   - name: include vaulted
  #     include_vars:
  #       file: vault.yml
  #     no_log: yes
  #   - name: include vars 
  #     include_vars: 
  #       file: vars.yml

  tasks:

    - name: create teraform.tfvars 
      include_role: 
        name: terra-provision

    # - name: run terraform
    #   shell: "echo yes | aws-vault --debug exec infra terraform {{ aws_instance_state }}"
    #   args:
    #     chdir: "{{ playbook_dir }}/terraform/"
      
    # - name: get state
    #   set_fact:
    #     terra_result: "{{ lookup('file', 'terraform/terraform.tfstate') | from_json  }}"

    - name: run the terraform script 
      terraform:
        # binary_path: /home/hans/terraform-vault
        project_path: "{{ playbook_dir }}/terraform/"
        state: "{{ aws_instance_state }}"
        variables: 
          aws_region: "{{ aws_region }}"
          aws_access_key_id: "{{ aws_access_key_id }}"
          aws_secret_access_key: "{{ aws_secret_access_key }}"
          aws_ami_id: "{{ aws_ami_id }}"
          public_key: "{{ public_key }}"
      register: terra_result

    - name: show terra_result 
      debug:
        var: terra_result

    - name: set vm_ip / name
      set_fact:
        vm_ip_web: "{{ terra_result.outputs.public_ip_web.value }}"
        vm_ip_db: "{{ terra_result.outputs.public_ip_db.value }}"
      when: 
        - terra_result.outputs.state_web is defined
        - terra_result.outputs.state_db is defined

    - name: create the dynamic inventory
      block: 
        - name: remove old dynamic group_vars file
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - group_vars/dynamic_web.yml
            - group_vars/dynamic_db.yml
        - name: create new centos group_vars file
          file:
            path: "{{ item }}"
            state: touch
          with_items:
            - group_vars/dynamic_web.yml
            - group_vars/dynamic_db.yml
        - name: remove old dynamic host file
          file:
            path: inventory/hosts
            state: absent
        - name: create new dynamic host file
          file:
            path: inventory/hosts
            state: touch
        - name: add retrieved IP to file
          blockinfile:
            path: group_vars/dynamic_web.yml
            marker: ""
            block: |
              ---

              ansible_host: {{ vm_ip_web }}
              ansible_user: {{ remote_user[hypervisor] }}
              become_user: {{ remote_user[hypervisor] }}
              remote_user: {{ remote_user[hypervisor] }}
              become: true

              ...

        - name: add retrieved IP to file
          blockinfile:
            path: group_vars/dynamic_db.yml
            marker: ""
            block: |
              ---

              ansible_host: {{ vm_ip_db }}
              ansible_user: {{ remote_user[hypervisor] }}
              become_user: {{ remote_user[hypervisor] }}
              remote_user: {{ remote_user[hypervisor] }}
              become: true

              ...

        - name: add retrieved IP to file
          blockinfile:
            path: "inventory/hosts"
            marker: ""
            block: |
              [dynamic_web]
              {{ vm_ip_web }}

              [dynamic_db]
              {{ vm_ip_db }}

        - name: Add host
          add_host:
            hostname: "{{ vm_ip_web }}"
            groupname: dynamic_web
            remote_user: "{{ remote_user[hypervisor] }}"
        - name: Add host
          add_host:
            hostname: "{{ vm_ip_db }}"
            groupname: dynamic_db
            remote_user: "{{ remote_user[hypervisor] }}"
      when: 
        - terra_result.outputs.state_web is defined
        - terra_result.outputs.state_db is defined

    - name: Collect facts again
      setup:

    ################################
    # pause                        #
    ################################
    - name: Wait 300 seconds for port 22 to become open and contains the string "OpenSSH"
      wait_for:
        port: 22
        host: '{{ vm_ip_web }}'
        search_regex: OpenSSH
        delay: 10
      vars:
        ansible_connection: local
      when: vm_ip_web is defined

###############################################
# playbook for configuration of the webserver #
###############################################
- hosts: dynamic_web

  tasks:
    - name: create a website
      include_role: 
        name: webserver


###############################################
# playbook for configuration of the dbserver  #
###############################################
- hosts: dynamic_db

  tasks:
    - name: create a database
      include_role: 
        name: databaseserver

...
